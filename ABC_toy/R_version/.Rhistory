require(EasyABC)
# Toy programm
# ======================================================================
#   COMPUTE PREDICTED VALUES: BLACK BOX
# ======================================================================
#     the numbers in the following equations are "hidden"
model <- function(par){
val1 <- 1e-1*par[1] +
2e-1*par[2]^2.0 +
7e-1*par[3] +
4e-1*par[4];
val2 <- 3e-2*par[1]^4.0 +
5e-2*par[2]^3.0 +
9e-2*par[3]^2.0 +
1e-2*par[4];
val3 <- 7e-3*par[1]^4.0 +
1e-3*par[2]^3.0 +
4e-3*par[3]^2.0 +
2e-3*par[4];
val4 <- 2e-4*par[1]^4.0 +
5e-4*par[2]^3.0 +
8e-4*par[3]^2.0 +
8e-4*par[4];
val5 <- 9e-5*par[1]^4.0 +
6e-5*par[2]^3.0 +
3e-4*par[3]^2.0 +
1e-4*par[4]
return(c(val1,val2,val3,val4,val5))
}
data <- model(c(34,12,456,78))
summarydata <- data
toy_prior <- list(c("unif",1e-1,1000),c("unif",1e-1,1000),
c("unif",1e-1,1000),c("unif",1e-1,1000))
ABC_Marjoram_original <- ABC_mcmc(method="Marjoram", model=model,
prior=list(c("unif",1e-1,1000),c("unif",1e-1,1000),
c("unif",1e-1,1000),c("unif",1e-1,1000)),
summary_stat_target=summarydata, n_rec = 1e5)
install.packages("EasyABC")
require(EasyABC)
# Toy programm
# ======================================================================
#   COMPUTE PREDICTED VALUES: BLACK BOX
# ======================================================================
#     the numbers in the following equations are "hidden"
model <- function(par){
val1 <- 1e-1*par[1] +
2e-1*par[2]^2.0 +
7e-1*par[3] +
4e-1*par[4];
val2 <- 3e-2*par[1]^4.0 +
5e-2*par[2]^3.0 +
9e-2*par[3]^2.0 +
1e-2*par[4];
val3 <- 7e-3*par[1]^4.0 +
1e-3*par[2]^3.0 +
4e-3*par[3]^2.0 +
2e-3*par[4];
val4 <- 2e-4*par[1]^4.0 +
5e-4*par[2]^3.0 +
8e-4*par[3]^2.0 +
8e-4*par[4];
val5 <- 9e-5*par[1]^4.0 +
6e-5*par[2]^3.0 +
3e-4*par[3]^2.0 +
1e-4*par[4]
return(c(val1,val2,val3,val4,val5))
}
data <- model(c(34,12,456,78))
summarydata <- data
toy_prior <- list(c("unif",1e-1,1000),c("unif",1e-1,1000),
c("unif",1e-1,1000),c("unif",1e-1,1000))
ABC_Marjoram_original <- ABC_mcmc(method="Marjoram", model=model,
prior=list(c("unif",1e-1,1000),c("unif",1e-1,1000),
c("unif",1e-1,1000),c("unif",1e-1,1000)),
summary_stat_target=summarydata, n_rec = 1e5)
ABC_Marjoram_original
plot(ABC_Marjoram_original$param[,1],type="l")
model(c(34,12,456,78))
model <- function(par){
val1 <- 1e-1*par[1] +
2e-1*par[2]^2.0 +
7e-1*par[3] +
4e-1*par[4];
val2 <- 3e-2*par[1]^2.0 +
5e-2*par[2]^3.0 +
9e-2*par[3]^1.0 +
1e-2*par[4];
val3 <- 7e-3*par[1]^1.0 +
1e-3*par[2]^2.0 +
4e-3*par[3]^3.0 +
2e-3*par[4];
val4 <- 2e-4*par[1]^2.5 +
5e-4*par[2]^3.3 +
8e-4*par[3]^2.2 +
8e-4*par[4];
val5 <- 9e-5*par[1]^4.1 +
6e-5*par[2]^3.4 +
3e-4*par[3]^2.7 +
1e-4*par[4]
return(c(val1,val2,val3,val4,val5))
}
data <- model(c(34,12,456,78))
summarydata <- data
data
toy_prior <- list(c("unif",1e-1,1000),c("unif",1e-1,1000),
c("unif",1e-1,1000),c("unif",1e-1,1000))
require(EasyABC)
# Toy programm
# ======================================================================
#   COMPUTE PREDICTED VALUES: BLACK BOX
# ======================================================================
#     the numbers in the following equations are "hidden"
toy_model <- function(par){
val1 <- 1e-1*par[1] +
2e-1*par[2]^2.0 +
7e-1*par[3] +
4e-1*par[4];
val2 <- 3e-2*par[1]^2.0 +
5e-2*par[2]^3.0 +
9e-2*par[3]^1.0 +
1e-2*par[4];
val3 <- 7e-3*par[1]^1.0 +
1e-3*par[2]^2.0 +
4e-3*par[3]^3.0 +
2e-3*par[4];
val4 <- 2e-4*par[1]^2.5 +
5e-4*par[2]^3.3 +
8e-4*par[3]^2.2 +
8e-4*par[4];
val5 <- 9e-5*par[1]^4.1 +
6e-5*par[2]^3.4 +
3e-4*par[3]^2.7 +
1e-4*par[4]
return(c(val1,val2,val3,val4,val5))
}
data <- toy_model(c(34,12,456,78))
summarydata <- data
toy_prior <- list(c("unif",1e-1,1000),c("unif",1e-1,1000),
c("unif",1e-1,1000),c("unif",1e-1,1000))
n = 10
p = 0.2
ABC_rej<-ABC_rejection(model=toy_model, prior=toy_prior, nb_simul=n,
+ summary_stat_target=sum_stat_obs, tol=p)
ABC_rej<-ABC_rejection(model=toy_model, prior=toy_prior, nb_simul=n,
summary_stat_target=sum_stat_obs, tol=p)
sumobs <- toy_model(c(34,12,456,78))
sum_stat_obs <- sumobs
toy_prior <- list(c("unif",1e-1,1000),c("unif",1e-1,1000),
c("unif",1e-1,1000),c("unif",1e-1,1000))
n = 10
p = 0.2
ABC_rej<-ABC_rejection(model=toy_model, prior=toy_prior, nb_simul=n,
summary_stat_target=sum_stat_obs, tol=p)
ABC_rej
n = 100
p = 0.2
ABC_rej <-ABC_rejection(model=toy_model, prior=toy_prior, nb_simul=n,
summary_stat_target=sum_stat_obs, tol=p)
ABC_rej
ABC_rej <-ABC_rejection(model=toy_model, prior=toy_prior, nb_simul=n)
rej <- abc(sum_stat_obs, ABC_rej$param, ABC_rej$stats, tol=0.2, method="rejection")
library(abc)
rej <- abc(sum_stat_obs, ABC_rej$param, ABC_rej$stats, tol=0.2, method="rejection")
rej
rej$unadj.values
rej$dist
n = 1e4
p = 0.2
ABC_rej <-ABC_rejection(model=toy_model, prior=toy_prior, nb_simul=n)
rej <- abc(sum_stat_obs, ABC_rej$param, ABC_rej$stats, tol=0.2, method="rejection")
rej$unadj.values
rej$unadj.values[,1]
hist(rej$unadj.values[,1])
rej <- abc(sum_stat_obs, ABC_rej$param, ABC_rej$stats, tol=0.1, method="rejection")
hist(rej$unadj.values[,1])
n = 1e5
p = 0.2
ABC_rej <-ABC_rejection(model=toy_model, prior=toy_prior, nb_simul=n)
rej <- abc(sum_stat_obs, ABC_rej$param, ABC_rej$stats, tol=0.1, method="rejection")
toy_model(c(34,12,456,78))
toy_model <- function(par){
val1 <- 1e-1*par[1] +
2e-1*par[2]^2.0 +
7e-1*par[3] +
4e-1*par[4];
val2 <- 3e-2*par[1]^2.0 +
5e-2*par[2]^3.0 +
9e-2*par[3]^1.0 +
1e-2*par[4];
val3 <- 7e-3*par[1]^1.0 +
1e-3*par[2]^2.0 +
4e-3*par[3] +
2e-3*par[4];
val4 <- 2e-4*par[1]^2.5 +
5e-4*par[2]^3.3 +
8e-4*par[3]^2.2 +
8e-4*par[4];
val5 <- 9e-5*par[1]^4.1 +
6e-5*par[2]^3.4 +
3e-4*par[3]^2.7 +
1e-4*par[4]
return(c(val1,val2,val3,val4,val5))
}
sumobs <- toy_model(c(34,12,456,78))
sumobs
toy_model <- function(par){
val1 <- 1e-1*par[1] +
2e-1*par[2]^2.0 +
7e-1*par[3] +
4e-1*par[4];
val2 <- 3e-2*par[1]^2.0 +
5e-2*par[2]^3.0 +
9e-2*par[3]^1.0 +
1e-2*par[4];
val3 <- 7e-3*par[1]^1.0 +
1e-3*par[2]^2.0 +
4e-3*par[3] +
2e-3*par[4];
val4 <- 2e-4*par[1]^2.5 +
5e-4*par[2]^3.3 +
8e-4*par[3]^2.2 +
8e-4*par[4];
val5 <- 9e-5*par[1]^1.1 +
6e-5*par[2]^3.4 +
3e-4*par[3]^2.7 +
1e-4*par[4]
return(c(val1,val2,val3,val4,val5))
}
sumobs <- toy_model(c(34,12,456,78))
sum_stat_obs <- sumobs
sumobs
toy_prior <- list(c("unif",1e-1,1000),c("unif",1e-1,1000),
c("unif",1e-1,1000),c("unif",1e-1,1000))
n = 1e5
p = 0.2
ABC_rej <-ABC_rejection(model=toy_model, prior=toy_prior, nb_simul=n)
rej <- abc(sum_stat_obs, ABC_rej$param, ABC_rej$stats, tol=0.1, method="rejection")
rej
rej$unadj.values
rej$unadj.values[,1]
hist(rej$unadj.values[,1])
hist(sumobs)
toy_model(c(34,12,456,78))
toy_model <- function(par){
val1 <- 1e-1*par[1] +
2e-1*par[2]^2.0 +
7e-1*par[3] +
4e-1*par[4];
val2 <- 3e-2*par[1]^2.0 +
5e-2*par[2]^3.0 +
9e-2*par[3]^1.0 +
1e-2*par[4];
val3 <- 7e-3*par[1]^1.0 +
1e-3*par[2]^2.0 +
4e-3*par[3] +
2e-3*par[4];
val4 <- 2e-4*par[1]^2.5 +
5e-4*par[2]^3.3 +
8e-4*par[3]^2.2 +
8e-4*par[4]
return(c(val1,val2,val3,val4))
}
sumobs <- toy_model(c(34,12,456,78))
sum_stat_obs <- sumobs
toy_prior <- list(c("unif",1e-1,1000),c("unif",1e-1,1000),
c("unif",1e-1,1000),c("unif",1e-1,1000))
n = 1e4
p = 0.2
ABC_rej <-ABC_rejection(model=toy_model, prior=toy_prior, nb_simul=n)
rej <- abc(sum_stat_obs, ABC_rej$param, ABC_rej$stats, tol=0.1, method="rejection")
rej$unadj.values
plot(rej$unadj.values[,1],type="l")
rej <- abc(sum_stat_obs, ABC_rej$param, ABC_rej$stats, tol=0.01, method="rejection")
plot(rej$unadj.values[,1],type="l")
rej <- abc(sum_stat_obs, ABC_rej$param, ABC_rej$stats, tol=0.001, method="rejection")
plot(rej$unadj.values[,1],type="l")
n = 5e4
p = 0.2
ABC_rej <-ABC_rejection(model=toy_model, prior=toy_prior, nb_simul=n)
rej <- abc(sum_stat_obs, ABC_rej$param, ABC_rej$stats, tol=0.001, method="rejection")
plot(rej$unadj.values[,1],type="l")
rej <- abc(sum_stat_obs, ABC_rej$param, ABC_rej$stats, tol=0.01, method="rejection")
plot(rej$unadj.values[,1],type="l")
n = 1e6
p = 0.2
ABC_rej <-ABC_rejection(model=toy_model, prior=toy_prior, nb_simul=n)
tolerance=c(1.25,0.75)
ABC_Beaumont<-ABC_sequential(method="Beaumont", model=toy_model,
prior=toy_prior, nb_simul=1e4, summary_stat_target=sum_stat_obs,
tolerance_tab=tolerance)
ABC_Beaumont
ABC_Beaumont$param[,1]
hist(ABC_Beaumont$param[,1])
hist(ABC_Beaumont$param[,2])
hist(ABC_Beaumont$param[,23)
hist(ABC_Beaumont$param[,2])
hist(ABC_Beaumont$param[,3])
hist(ABC_Beaumont$param[,4])
tolerance=c(1,0.5)
ABC_Beaumont<-ABC_sequential(method="Beaumont", model=toy_model,
prior=toy_prior, nb_simul=5e4, summary_stat_target=sum_stat_obs,
tolerance_tab=tolerance)
ABC_Beaumont$param[,1]
hist(ABC_Beaumont$param[,1])
sumobs
rej <- abc(sum_stat_obs, ABC_rej$param, ABC_rej$stats, tol=0.01, method="neuralnet")
plot(rej$unadj.values[,1],type="l")
rej <- abc(sum_stat_obs, ABC_rej$param, ABC_rej$stats, tol=0.01, method =
"loclinear", transf=c("log","log","log","log"))
plot(rej$unadj.values[,1],type="l")
toy_prior
toy_model <- function(par){
val1 <- 1e-1*par[1] +
2e-1*par[2]^2.0 +
7e-1*par[3] +
4e-1*par[4];
val2 <- 3e-2*par[1]^2.0 +
5e-2*par[2]^3.0 +
9e-2*par[3]^1.0 +
1e-2*par[4];
val3 <- 7e-3*par[1]^1.0 +
1e-3*par[2]^2.0 +
4e-3*par[3] +
2e-3*par[4];
val4 <- 2e-4*par[1]^2.5 +
5e-4*par[2]^3.3 +
8e-4*par[3]^2.2 +
8e-4*par[4]
return(mean(c(val1,val2,val3,val4)),sd(c(val1,val2,val3,val4)))
}
sumobs <- toy_model(c(34,12,456,78))
sum_stat_obs <- c(mean(sumobs),sd(sumobs))
toy_model(c(34,12,456,78))
toy_model <- function(par){
val1 <- 1e-1*par[1] +
2e-1*par[2]^2.0 +
7e-1*par[3] +
4e-1*par[4];
val2 <- 3e-2*par[1]^2.0 +
5e-2*par[2]^3.0 +
9e-2*par[3]^1.0 +
1e-2*par[4];
val3 <- 7e-3*par[1]^1.0 +
1e-3*par[2]^2.0 +
4e-3*par[3] +
2e-3*par[4];
val4 <- 2e-4*par[1]^2.5 +
5e-4*par[2]^3.3 +
8e-4*par[3]^2.2 +
8e-4*par[4]
return(mean(c(val1,val2,val3,val4)),sd(c(val1,val2,val3,val4)))
}
toy_model(c(34,12,456,78))
toy_model <- function(par){
val1 <- 1e-1*par[1] +
2e-1*par[2]^2.0 +
7e-1*par[3] +
4e-1*par[4];
val2 <- 3e-2*par[1]^2.0 +
5e-2*par[2]^3.0 +
9e-2*par[3]^1.0 +
1e-2*par[4];
val3 <- 7e-3*par[1]^1.0 +
1e-3*par[2]^2.0 +
4e-3*par[3] +
2e-3*par[4];
val4 <- 2e-4*par[1]^2.5 +
5e-4*par[2]^3.3 +
8e-4*par[3]^2.2 +
8e-4*par[4]
S1 <- mean(c(val1,val2,val3,val4))
S2 <- sd(c(val1,val2,val3,val4))
return(c(S1 ,S2 ))
}
toy_model(c(34,12,456,78))
sumobs <- toy_model(c(34,12,456,78))
sum_stat_obs <- sumobs
toy_prior <- list(c("unif",1e-1,1000),c("unif",1e-1,1000),
c("unif",1e-1,1000),c("unif",1e-1,1000))
n = 1e4
p = 0.2
ABC_rej <-ABC_rejection(model=toy_model, prior=toy_prior, nb_simul=n)
rej <- abc(sum_stat_obs, ABC_rej$param, ABC_rej$stats, tol=0.01, method =
"loclinear", transf=c("log","log","log","log"))
plot(rej$unadj.values[,1],type="l")
tolerance=c(1,0.5)
ABC_Beaumont<-ABC_sequential(method="Beaumont", model=toy_model,
prior=toy_prior, nb_simul=1e4, summary_stat_target=sum_stat_obs,
tolerance_tab=tolerance)
ABC_Beaumont$param[,1]
hist(ABC_Beaumont$param[,1])
tolerance=c(0.75,0.25)
ABC_Beaumont<-ABC_sequential(method="Beaumont", model=toy_model,
prior=toy_prior, nb_simul=1e4, summary_stat_target=sum_stat_obs,
tolerance_tab=tolerance)
hist(ABC_Beaumont$param[,1])
toy_prior <- list(c("unif",1e-1,100),c("unif",1e-1,100),
c("unif",1e-1,100),c("unif",1e-1,100))
tolerance=c(0.75,0.25)
ABC_Beaumont<-ABC_sequential(method="Beaumont", model=toy_model,
prior=toy_prior, nb_simul=1e4, summary_stat_target=sum_stat_obs,
tolerance_tab=tolerance)
hist(ABC_Beaumont$param[,1])
tolerance=c(0.75,0.25,0.1)
ABC_Beaumont<-ABC_sequential(method="Beaumont", model=toy_model,
prior=toy_prior, nb_simul=1e5, summary_stat_target=sum_stat_obs,
tolerance_tab=tolerance)
toy_model <- function(par){
val1 <- 1e-1*par[1] +
2e-1*par[2]^2.0 +
7e-1*par[3] +
4e-1*par[4];
val2 <- 3e-2*par[1]^2.0 +
5e-2*par[2]^3.0 +
9e-2*par[3]^1.0 +
1e-2*par[4];
val3 <- 7e-3*par[1]^1.0 +
1e-3*par[2]^2.0 +
4e-3*par[3] +
2e-3*par[4];
val4 <- 2e-4*par[1]^2.5 +
5e-4*par[2]^3.3 +
8e-4*par[3]^2.2 +
8e-4*par[4]
#S1 <- mean(c(val1,val2,val3,val4))
#S2 <- sd(c(val1,val2,val3,val4))
return(c(log(val1),log(val2),log(val3),log(val4)))
}
toy_model(c(34,12,6,78))
sumobs <- toy_model(c(34,12,6,78))
sum_stat_obs <- sumobs
toy_prior <- list(c("unif",1e-1,100),c("unif",1e-1,100),
c("unif",1e-1,100),c("unif",1e-1,100))
tolerance=c(0.75,0.25,0.1)
ABC_Beaumont <- ABC_sequential(method="Beaumont", model=toy_model,
prior=toy_prior, nb_simul=1e5\4, summary_stat_target=sum_stat_obs,
tolerance_tab=tolerance)
ABC_Beaumont <- ABC_sequential(method="Beaumont", model=toy_model,
prior=toy_prior, nb_simul=1e4, summary_stat_target=sum_stat_obs,
tolerance_tab=tolerance)
hist(ABC_Beaumont$param[,1])
ABC_Beaumont <- ABC_sequential(method="Beaumont", model=toy_model,
prior=toy_prior, nb_simul=5e4, summary_stat_target=sum_stat_obs,
tolerance_tab=tolerance)
tolerance=c(0.75,0.25,0.1)
ABC_Beaumont <- ABC_sequential(method="Beaumont", model=toy_model,
prior=toy_prior, nb_simul=1e4, summary_stat_target=sum_stat_obs,
tolerance_tab=tolerance)
hist(ABC_Beaumont$param[,1])
dim(ABC_Beaumont$param)
hist(ABC_Beaumont$param[,1])
hist(ABC_Beaumont$param[,1])
hist(ABC_Beaumont$param[,2])
hist(ABC_Beaumont$param[,3])
hist(ABC_Beaumont$param[,4])
tolerance=c(1,0.75,0.5,0.25,0.1)
ABC_Beaumont <- ABC_sequential(method="Beaumont", model=toy_model,
prior=toy_prior, nb_simul=1e4, summary_stat_target=sum_stat_obs,
tolerance_tab=tolerance)
hist(ABC_Beaumont$param[,1])
pdat <- as.data.frame(ABC_Beaumont$param)
ggplot(data = pdat,aes(x = V1,y = V4)) +
geom_density_2d()
require(ggplot2)
pdat <- as.data.frame(ABC_Beaumont$param)
ggplot(data = pdat,aes(x = V1,y = V4)) +
geom_density_2d()
ggplot(data = pdat,aes(x = V1,y = V2)) +
geom_density_2d()
10197+600+3100
ABC_Beaumont <- ABC_sequential(method="Beaumont", model=toy_model,
prior=toy_prior, nb_simul=1e4, summary_stat_target=sum_stat_obs,
tolerance_tab=tolerance,n_cluster=4)
# Run Sequencial Approximate Bayesian Computation
ABC_Beaumont <- ABC_sequential(method="Beaumont", model=toy_model,
prior=toy_prior, nb_simul=1e4, summary_stat_target=sum_stat_obs,
tolerance_tab=tolerance,n_cluster=4,use_seed=TRUE)
oy_model <- function(par){
val1 <- 1e-1*par[1]^4 +
2e-1*par[2]^3.0 +
7e-1*par[3]^2 +
4e-1*par[4];
val2 <- 3e-2*par[1]^4.0 +
5e-2*par[2]^3.0 +
9e-2*par[3]^2.0 +
1e-2*par[4];
val3 <- 7e-3*par[1]^4.0 +
1e-3*par[2]^3.0 +
4e-3*par[3]^2 +
2e-3*par[4];
val4 <- 2e-4*par[1]^4 +
5e-4*par[2]^3 +
8e-4*par[3]^2 +
8e-4*par[4]
#S1 <- mean(c(val1,val2,val3,val4))
#S2 <- sd(c(val1,val2,val3,val4))
return(c(log(val1),log(val2),log(val3),log(val4)))
}
# Observed data
x1 = 34
x2 = 12
x3 = 456
x4 = 78
obs_data <- toy_model(c(x1,x2,x3,x4))
obs_data
toy_prior <- list(c("unif",1e-1,1e3),c("unif",1e-1,1e3),
c("unif",1e-1,1e3),c("unif",1e-1,1e3))
# Fraction of acceptable data, measured via Euclidian distance between simulation and obs_data
tolerance=c(1,0.75,0.5,0.25,0.1)
ABC_Beaumont <- ABC_sequential(method="Beaumont", model=toy_model,
prior=toy_prior, nb_simul=1e3, summary_stat_target=sum_stat_obs,
tolerance_tab=tolerance,n_cluster=4,use_seed=TRUE)
